name: CD

on:
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Install rust stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.3
      - name: Push Gem
        run: |
          gem_version=$(ruby -r rubygems -e "puts Gem::Specification::load('$(ls *.gemspec)').version")
          echo "gem_version=$gem_version" >> $GITHUB_OUTPUT

          if git fetch origin "refs/tags/v$gem_version" >/dev/null 2>&1
          then
            echo "Tag 'v$gem_version' already exists"
            echo "new_version=false" >> $GITHUB_OUTPUT
          else
            mkdir -p $HOME/.gem
            touch $HOME/.gem/credentials
            chmod 0600 $HOME/.gem/credentials
            printf -- "---\n:rubygems_api_key: ${RUBYGEMS_API_KEY}\n" > $HOME/.gem/credentials
            git config --global user.email "${GIT_EMAIL}"
            git config --global user.name "${GIT_NAME}"
            bundle exec rake release
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          GIT_EMAIL: ${{secrets.GUSTO_GIT_EMAIL}}
          GIT_NAME: ${{secrets.GUSTO_GIT_EMAIL}}
          RUBYGEMS_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}
          RELEASE_COMMAND: "rake release"
      - name: Create GitHub Release
        run: gh release create v${{steps.tag-and-push-gem.outputs.gem_version}} --generate-notes
        if: ${{ steps.tag-and-push-gem.outputs.new_version == 'true' }}
